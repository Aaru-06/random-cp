{"version":3,"sources":["components/Handle.js","components/Display.js","components/App.js","components/AppContainer.js","index.js"],"names":["Handle","handlestring","this","props","handle","styles","margin","border","type","className","name","value","onChange","handleChange","style","Object","assign","display","handleDisable","checked","disabled","loading","onClick","handleClick","Component","Display","fraction","approxRating","rating","Math","pow","toFixed","enableDisplay","approxRatingChanger","getProbability","href","problemLink","target","App","textAlign","data","currentProblem","AppContainer","state","undefined","bind","fetchProblems","fetchRandomProblem","document","title","event","nextState","setState","url","fetch","then","json","status","result","newApproxRating","round","catch","window","alert","problems","filteredProblems","filter","obj","lengthOfFilteredProblems","length","selectedProblem","floor","random","problemUrl","contestId","index","setTimeout","prevState","newState","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.95cb9623.chunk.js","sourcesContent":["import React, { Component } from \"react\"\r\n\r\nclass Handle extends Component{\r\n    render(){\r\n        let handlestring = this.props.handle?this.props.handle:\"\"\r\n        let styles = {\r\n            margin : \"10px\",\r\n            border : \"double\"\r\n        }\r\n\r\n        return(\r\n            <div>\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"handlebox\"\r\n                    name=\"handle\" \r\n                    value={handlestring} \r\n                    onChange={this.props.handleChange} \r\n                    style={Object.assign({display : this.props.handleDisable?\"none\":null},styles)}\r\n                />\r\n                <br />\r\n                <label>\r\n                    <input \r\n                        type=\"checkbox\" \r\n                        name=\"handleDisable\" \r\n                        checked={this.props.handleDisable}\r\n                        onChange = {this.props.handleChange}\r\n                    />\r\n                    I won't share my handle.!\r\n                </label>\r\n                <br />\r\n                {/* <select name=\"tags\" value={this.props.selectedTag}>\r\n                    {this.props.tags.map(obj => {<option value=\"obj\">obj</option>})}\r\n                </select> */}\r\n                <button \r\n                    type=\"button\" \r\n                    name=\"fetchbtn\"\r\n                    disabled = {this.props.loading}\r\n                    onClick={this.props.handleClick}\r\n                    style={styles}\r\n                >Search</button>\r\n                <br />\r\n                <button \r\n                    type=\"button\" \r\n                    name=\"clearbtn\" \r\n                    disabled = {this.props.loading}\r\n                    onClick={this.props.handleChange}\r\n                    style={styles}\r\n                >Clear</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Handle","import React, { Component } from \"react\"\r\n\r\nclass Display extends Component{\r\n    \r\n    \r\n    getProbability(){\r\n        // 1/(1+10**((i+j)/400))\r\n        let fraction = (this.props.approxRating-this.props.rating)/400;\r\n        let denominator = Math.pow(10,fraction) + 1;\r\n\r\n        return ((1/denominator)*100).toFixed(2)\r\n    }\r\n\r\n    render(){\r\n        \r\n        let styles = {display : this.props.enableDisplay?\"block\":\"none\"}\r\n\r\n        return (\r\n            <div style={styles} >\r\n                <h1 \r\n                    style={{\r\n                        display : this.props.rating?\"block\":\"none\" \r\n                    }}\r\n                >Your rating  : {this.props.rating}</h1>\r\n                <h1>\r\n                    <button type=\"button\" name=\"sub\" onClick={this.props.approxRatingChanger}>-</button>\r\n                    &nbsp;Suggested rating of problem : {this.props.approxRating}&nbsp;\r\n                    <button type=\"button\" name=\"add\" onClick={this.props.approxRatingChanger}>+</button>\r\n                </h1>\r\n                <div\r\n                    style = {{\r\n                        display : this.props.rating?\"block\":\"none\"\r\n                }}>\r\n                    <strong>    You will be able to solve this Problem with the probability of {this.getProbability()} % </strong>\r\n                </div>\r\n                <div style={{ margin : \"10px\"}}>\r\n                    <a \r\n                        className = \"problemLink\"\r\n                        href={this.props.problemLink}\r\n                        target=\"_blank\"\r\n                    >\r\n                        <strong>\r\n                        {this.props.problemLink? \"Your Problem is ready..! Happy Coding ;)\" : \"Please wait till we get your problem\"}\r\n                        </strong>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Display","import React from \"react\"\r\n\r\nimport Handle from \"./Handle\"\r\nimport Display from \"./Display\"\r\n\r\nfunction App(props){\r\n\r\n        let styles = {\r\n            textAlign : \"center\",\r\n            border : \"double\",\r\n            margin : 100\r\n        }\r\n    \r\n        return(\r\n            <div className=\"container\" style={styles}>\r\n                <Handle \r\n                    handleChange = {props.handleChange}\r\n                    handleClick ={props.handleClick}\r\n                    handle = {props.data.handle}\r\n                    handleDisable = {props.data.handleDisable}\r\n                    loading = {props.data.loading}\r\n                />\r\n                <Display \r\n                    enableDisplay = {props.data.enableDisplay}\r\n                    rating = {props.data.rating}\r\n                    approxRating = {props.data.approxRating}\r\n                    problemLink = {props.data.currentProblem}\r\n                    approxRatingChanger = {props.approxRatingChanger}\r\n                />\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default App","import React , {Component} from \"react\"\r\n\r\nimport App from \"./App\"\r\n\r\nclass AppContainer extends Component{\r\n    \r\n    constructor(){\r\n        super()\r\n\r\n        this.state ={\r\n            handle : undefined,\r\n            rating : undefined,\r\n            loading : true,\r\n            currentProblem : undefined,\r\n            handleDisable : false,\r\n            approxRating : 1000,\r\n            enableDisplay : false\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleClick = this.handleClick.bind(this)\r\n        this.fetchProblems = this.fetchProblems.bind(this)\r\n        this.approxRatingChanger = this.approxRatingChanger.bind(this)\r\n        this.fetchRandomProblem = this.fetchRandomProblem.bind(this)\r\n    }\r\n    \r\n    componentDidMount(){\r\n        document.title = \"Random - CP\";\r\n\r\n        this.fetchProblems()\r\n    }\r\n\r\n    handleChange(event){\r\n\r\n        const {value,type,checked} = event.target\r\n\r\n        let nextState = {\r\n            handle : undefined,\r\n            rating : undefined,\r\n            currentProblem : undefined,\r\n            enableDisplay : false,\r\n            approxRating : 1000        \r\n        };\r\n\r\n        if (type===\"checkbox\"){\r\n            nextState.handleDisable = checked\r\n        }\r\n        else if (type===\"text\"){\r\n            nextState.handle = value\r\n        }\r\n\r\n        this.setState(nextState)\r\n\r\n        \r\n    }\r\n\r\n    handleClick(event){\r\n\r\n        if(this.state.handle===undefined && !this.state.handleDisable){\r\n            window.alert(\"Please enter a valid Handle ID of codeforces\")\r\n            return\r\n        }\r\n\r\n        this.setState({\r\n            currentProblem : undefined\r\n        })\r\n\r\n        if(!this.state.handleDisable){\r\n        \r\n            let url = \"https://codeforces.com/api/user.info?handles=\" + this.state.handle\r\n\r\n            fetch(url)\r\n                .then(data => data.json())\r\n                .then(data => {\r\n                    if(data.status===\"OK\"){\r\n                        this.setState({\r\n                            rating : data.result[0].rating\r\n                        })\r\n                        \r\n                        let newApproxRating  = Math.round((data.result[0].rating+50)/100)*100\r\n                        this.setState({\r\n                            approxRating : newApproxRating\r\n                        })\r\n                        this.fetchRandomProblem()\r\n                    }         \r\n                })\r\n                .catch(()=>\r\n                {\r\n                    window.alert(\"Please enter a valid Handle ID of codeforces\")\r\n                })\r\n        }\r\n        else{\r\n            this.fetchRandomProblem()\r\n        }\r\n\r\n    }\r\n\r\n    fetchProblems(){\r\n\r\n        let url = \"https://codeforces.com/api/problemset.problems\"\r\n        \r\n        fetch(url)\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                \r\n                this.setState({\r\n                    problems : data\r\n                })\r\n            })\r\n            .then(()=> this.setState({ loading : false }))\r\n    }\r\n\r\n    fetchRandomProblem(){\r\n\r\n                //console.log(\"fetch called with rating \",this.state.approxRating)\r\n                \r\n                let filteredProblems = this.state.problems.result.problems.filter(obj => this.state.approxRating===obj.rating ? true : false)\r\n                \r\n                const lengthOfFilteredProblems = filteredProblems.length\r\n\r\n                let randomNumber  =  Math.floor(Math.random()*(lengthOfFilteredProblems-1))\r\n\r\n                const selectedProblem = filteredProblems[randomNumber]\r\n\r\n                let problemUrl = \"https://codeforces.com/contest/\"+selectedProblem.contestId+\"/problem/\"+selectedProblem.index\r\n\r\n                setTimeout  (()=>{\r\n                    this.setState({\r\n                        currentProblem : problemUrl,\r\n                        enableDisplay : true\r\n                    })\r\n                },1000)\r\n    }\r\n\r\n    approxRatingChanger(event){\r\n\r\n        const op = event.target.name\r\n\r\n        if(op===\"add\"){\r\n            this.setState(prevState => {\r\n                let newState = Object.assign({},prevState);\r\n\r\n                (prevState.approxRating<3500) && (newState.approxRating = prevState.approxRating + 100)\r\n\r\n                newState.currentProblem = undefined\r\n\r\n                return newState\r\n            },this.fetchRandomProblem)\r\n        }\r\n        else{\r\n            this.setState(prevState => {\r\n                let newState = Object.assign({},prevState);\r\n\r\n                (prevState.approxRating>800) && (newState.approxRating = prevState.approxRating - 100)\r\n\r\n                newState.currentProblem = undefined\r\n\r\n                return newState\r\n            },this.fetchRandomProblem)\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <App \r\n                    handleChange ={this.handleChange}\r\n                    handleClick = {this.handleClick}\r\n                    approxRatingChanger = {this.approxRatingChanger}\r\n                    data = {this.state}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default AppContainer","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport AppContainer from \"./components/AppContainer\"\r\nimport \"./index.css\"\r\n\r\n\r\nReactDOM.render(<AppContainer />,document.getElementById(\"root\"));"],"sourceRoot":""}