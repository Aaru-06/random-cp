{"version":3,"sources":["components/Handle.js","components/Display.js","components/App.js","components/AppContainer.js","index.js","img/codeforces_logo.jpg"],"names":["Handle","handlestring","this","props","handle","styles","margin","border","options","undefined","tags","map","obj","index","value","key","type","className","name","onChange","handleChange","style","Object","assign","display","handleDisable","checked","selectedTag","disabled","loading","randomTopic","onClick","handleClick","Component","Display","fraction","approxRating","rating","Math","pow","toFixed","enableDisplay","innerstyles","approxRatingChanger","getProbability","href","problemLink","rel","target","App","textAlign","src","logo","alt","data","currentProblem","AppContainer","state","bind","fetchProblems","fetchRandomProblem","document","title","event","nextState","setState","url","fetch","then","json","status","result","newApproxRating","round","catch","window","alert","problems","tagSet","Set","forEach","add","tagList","Array","from","filteredProblems","filter","tagselected","includes","length","lengthOfFilteredProblems","selectedProblem","floor","random","problemUrl","contestId","setTimeout","prevState","newState","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.e3244abb.chunk.js","sourcesContent":["import React, { Component } from \"react\"\r\n\r\nclass Handle extends Component{\r\n    render(){\r\n        let handlestring = this.props.handle?this.props.handle:\"\"\r\n        let styles = {\r\n            margin : \"10px\",\r\n            border : \"double\"\r\n        }\r\n\r\n        // console.log(this.props)\r\n        // console.log(\"tags : \",this.props.tags)\r\n        let options = undefined\r\n        if(this.props.tags)\r\n            options = this.props.tags.map((obj,index) => {return (<option value = {obj} key={index}>{obj}</option>)})\r\n        // console.log(options)\r\n\r\n        return(\r\n            <div>\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"handlebox\"\r\n                    name=\"handle\" \r\n                    value={handlestring} \r\n                    onChange={this.props.handleChange} \r\n                    style={Object.assign({display : this.props.handleDisable?\"none\":null},styles)}\r\n                />\r\n                <br />\r\n                <label>\r\n                    <input \r\n                        type=\"checkbox\" \r\n                        name=\"handleDisable\" \r\n                        checked={this.props.handleDisable}\r\n                        onChange = {this.props.handleChange}\r\n                    />\r\n                    I won't share my handle.!\r\n                </label>\r\n                <br />\r\n                <select \r\n                    name=\"tags\" \r\n                    value={this.props.selectedTag}\r\n                    disabled={this.props.loading||this.props.randomTopic}\r\n                    onChange={this.props.handleChange}\r\n                    style ={{margin : 10}}\r\n                >{options}</select>\r\n                <br/>\r\n                <label>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        name=\"randomTopic\"\r\n                        checked={this.props.randomTopic}\r\n                        onChange = {this.props.handleChange}\r\n                    />\r\n                    Give me problems on random topics\r\n                </label>\r\n                <br/>\r\n                <button \r\n                    type=\"button\" \r\n                    name=\"fetchbtn\"\r\n                    disabled = {this.props.loading}\r\n                    onClick={this.props.handleClick}\r\n                    style={styles}\r\n                >Search</button>\r\n                <br />\r\n                <button \r\n                    type=\"button\" \r\n                    name=\"clearbtn\" \r\n                    disabled = {this.props.loading}\r\n                    onClick={this.props.handleChange}\r\n                    style={styles}\r\n                >Clear</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Handle","import React, { Component } from \"react\"\r\n\r\nclass Display extends Component{\r\n    \r\n    \r\n    getProbability(){\r\n        // 1/(1+10**((i+j)/400))\r\n        let fraction = (this.props.approxRating-this.props.rating)/400;\r\n        let denominator = Math.pow(10,fraction) + 1;\r\n\r\n        return ((1/denominator)*100).toFixed(2)\r\n    }\r\n\r\n    render(){\r\n        \r\n        let styles = {display : this.props.enableDisplay?\"block\":\"none\"}\r\n        let innerstyles = {display : (this.props.enableDisplay||this.props.handleDisable)?\"block\":\"none\"}\r\n\r\n        return (\r\n            <div>\r\n            <div style={styles} >\r\n                <h1 \r\n                    style={{\r\n                        display : this.props.rating?\"block\":\"none\" \r\n                    }}\r\n                >Your rating  : {this.props.rating}</h1>\r\n            </div>\r\n                <div style = {innerstyles}>\r\n                    <h1>Suggested rating of problem</h1>\r\n                    <div>\r\n                        <button type=\"button\" name=\"sub\" onClick={this.props.approxRatingChanger} className=\"btn-rating\">-</button>\r\n                        <span><strong>&nbsp; {this.props.approxRating}&nbsp;</strong></span>\r\n                        <button type=\"button\" name=\"add\" onClick={this.props.approxRatingChanger} className=\"btn-rating\">+</button>\r\n                    </div>\r\n                </div>\r\n            <div style={styles}>\r\n                <div\r\n                    style = {{\r\n                        display : this.props.rating?\"block\":\"none\"\r\n                }}>\r\n                    <strong>    You will be able to solve this Problem with the probability of {this.getProbability()} % </strong>\r\n                </div>\r\n                <div style={{ margin : \"10px\"}}>\r\n                    <a \r\n                        className = \"problemLink\"\r\n                        href={this.props.problemLink}\r\n                        rel = \"noopener noreferrer\"\r\n                        target=\"_blank\"\r\n                    >\r\n                        <strong>\r\n                        {this.props.problemLink? \"Your Problem is ready..! Happy Coding ;)\" : \"Please wait till we get your problem\"}\r\n                        </strong>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Display","import React from \"react\"\r\n\r\nimport Handle from \"./Handle\"\r\nimport Display from \"./Display\"\r\nimport logo from \"../img/codeforces_logo.jpg\"\r\n\r\n\r\nfunction App(props){\r\n\r\n        let styles = {\r\n            textAlign : \"center\",\r\n            border : \"double\",\r\n            margin : 100\r\n        }\r\n    \r\n        return(\r\n            <div className=\"container\" style={styles}>\r\n                <img className=\"logo-img\" src={logo} alt=\"codeforces logo\"/>\r\n                <h1>Random - CP</h1>\r\n                <Handle \r\n                    handleChange = {props.handleChange}\r\n                    handleClick ={props.handleClick}\r\n                    handle = {props.data.handle}\r\n                    handleDisable = {props.data.handleDisable}\r\n                    loading = {props.data.loading}\r\n                    tags = {props.data.tags}\r\n                    selectedTag = {props.data.selectedTag}\r\n                    randomTopic = {props.data.randomTopic}\r\n                />\r\n                <Display \r\n                    enableDisplay = {props.data.enableDisplay}\r\n                    handleDisable = {props.data.handleDisable}\r\n                    rating = {props.data.rating}\r\n                    approxRating = {props.data.approxRating}\r\n                    problemLink = {props.data.currentProblem}\r\n                    approxRatingChanger = {props.approxRatingChanger}\r\n                />\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default App","import React , {Component} from \"react\"\r\n\r\nimport App from \"./App\"\r\n\r\nclass AppContainer extends Component{\r\n    \r\n    constructor(){\r\n        super()\r\n\r\n        this.state ={\r\n            handle : undefined,\r\n            rating : undefined,\r\n            loading : true,\r\n            currentProblem : undefined,\r\n            handleDisable : false,\r\n            approxRating : 1000,\r\n            enableDisplay : false,\r\n            tags : undefined,\r\n            selectedTag : undefined,\r\n            randomTopic : false\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleClick = this.handleClick.bind(this)\r\n        this.fetchProblems = this.fetchProblems.bind(this)\r\n        this.approxRatingChanger = this.approxRatingChanger.bind(this)\r\n        this.fetchRandomProblem = this.fetchRandomProblem.bind(this)\r\n    }\r\n    \r\n    componentDidMount(){\r\n        document.title = \"Random - CP\";\r\n\r\n        this.fetchProblems()\r\n    }\r\n\r\n    handleChange(event){\r\n\r\n        const {name,value,type,checked} = event.target\r\n\r\n        let nextState = {\r\n            currentProblem : undefined,\r\n            enableDisplay : false,\r\n            approxRating : 1000        \r\n        };\r\n\r\n        if (name===\"handleDisable\"){\r\n            nextState.handleDisable = checked\r\n            nextState.handle = undefined\r\n            nextState.rating = undefined\r\n        }\r\n        else if (type===\"text\"){\r\n            nextState.handle = value\r\n            nextState.rating = undefined\r\n        }\r\n        else if(name===\"tags\"){\r\n            nextState.selectedTag = value\r\n        }\r\n        else if(name===\"randomTopic\"){\r\n            nextState.randomTopic = checked\r\n        }\r\n\r\n        this.setState(nextState)\r\n        \r\n    }\r\n\r\n    handleClick(event){\r\n\r\n        if(this.state.handle===undefined && !this.state.handleDisable){\r\n            window.alert(\"Please enter a valid Handle ID of codeforces\")\r\n            return\r\n        }\r\n\r\n        this.setState({\r\n            currentProblem : undefined\r\n        })\r\n\r\n        if(!this.state.handleDisable){\r\n        \r\n            let url = \"https://codeforces.com/api/user.info?handles=\" + this.state.handle\r\n\r\n            fetch(url)\r\n                .then(data => data.json())\r\n                .then(data => {\r\n                    if(data.status===\"OK\"){\r\n                        this.setState({\r\n                            rating : data.result[0].rating\r\n                        })\r\n                        \r\n                        let newApproxRating  = Math.round((data.result[0].rating+50)/100)*100\r\n                        this.setState({\r\n                            approxRating : newApproxRating\r\n                        })\r\n                        this.fetchRandomProblem()\r\n                    }         \r\n                })\r\n                .catch(()=>\r\n                {\r\n                    window.alert(\"Please enter a valid Handle ID of codeforces\")\r\n                })\r\n        }\r\n        else{\r\n            this.fetchRandomProblem()\r\n        }\r\n\r\n    }\r\n\r\n    fetchProblems(){\r\n\r\n        let url = \"https://codeforces.com/api/problemset.problems\"\r\n        \r\n        fetch(url)\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                \r\n                this.setState({\r\n                    problems : data\r\n                })\r\n\r\n                let tagSet = new Set()\r\n                data.result.problems.map(obj=>{obj.tags.forEach(tagSet.add,tagSet);return null;})\r\n\r\n                let tagList = Array.from(tagSet)\r\n\r\n                // console.log(data.result.problems)\r\n                // console.log(tagSet)\r\n\r\n                this.setState({\r\n                    tags : tagList,\r\n                    selectedTag : tagList[0]\r\n                })\r\n            })\r\n            .then(()=> this.setState({ loading : false }))\r\n    }\r\n\r\n    fetchRandomProblem(){\r\n\r\n                //console.log(\"fetch called with rating \",this.state.approxRating)\r\n                \r\n                let filteredProblems = this.state.problems.result.problems.filter(obj => this.state.approxRating===obj.rating ? true : false)\r\n                if(!this.state.randomTopic)\r\n                {\r\n                    let tagselected = this.state.selectedTag\r\n                    filteredProblems = filteredProblems.filter(obj => obj.tags.includes(tagselected))\r\n                    if(filteredProblems.length===0){\r\n                        window.alert(\"Sorry. We couldn't find problems based on \"+tagselected+\" for \"+this.state.approxRating+\" rating\")\r\n                        return\r\n                    }\r\n                }\r\n                const lengthOfFilteredProblems = filteredProblems.length\r\n                \r\n                let randomNumber  =  Math.floor(Math.random()*(lengthOfFilteredProblems-1))\r\n\r\n                const selectedProblem = filteredProblems[randomNumber]\r\n\r\n                let problemUrl = \"https://codeforces.com/contest/\"+selectedProblem.contestId+\"/problem/\"+selectedProblem.index\r\n\r\n                setTimeout  (()=>{\r\n                    this.setState({\r\n                        currentProblem : problemUrl,\r\n                        enableDisplay : true\r\n                    })\r\n                },1000)\r\n    }\r\n\r\n    approxRatingChanger(event){\r\n\r\n        const op = event.target.name\r\n\r\n        if(op===\"add\"){\r\n            this.setState(prevState => {\r\n                let newState = Object.assign({},prevState);\r\n\r\n                (prevState.approxRating<3500) && (newState.approxRating = prevState.approxRating + 100)\r\n\r\n                newState.currentProblem = undefined\r\n\r\n                return newState\r\n            },this.fetchRandomProblem)\r\n        }\r\n        else{\r\n            this.setState(prevState => {\r\n                let newState = Object.assign({},prevState);\r\n\r\n                (prevState.approxRating>800) && (newState.approxRating = prevState.approxRating - 100)\r\n\r\n                newState.currentProblem = undefined\r\n\r\n                return newState\r\n            },this.fetchRandomProblem)\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <App \r\n                    handleChange ={this.handleChange}\r\n                    handleClick = {this.handleClick}\r\n                    approxRatingChanger = {this.approxRatingChanger}\r\n                    data = {this.state}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default AppContainer","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport AppContainer from \"./components/AppContainer\"\r\nimport \"./index.css\"\r\n\r\n\r\nReactDOM.render(<AppContainer />,document.getElementById(\"root\"));","module.exports = __webpack_public_path__ + \"static/media/codeforces_logo.4cca0e5b.jpg\";"],"sourceRoot":""}